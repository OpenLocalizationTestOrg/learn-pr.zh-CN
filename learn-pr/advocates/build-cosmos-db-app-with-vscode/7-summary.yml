### YamlMime:ModuleUnit
uid: learn.cosmos-db-app-with-vscode.7-summary
metadata:
  title: <span data-ttu-id="06358-101">摘要</span><span class="sxs-lookup"><span data-stu-id="06358-101">Summary</span></span>
  description: <span data-ttu-id="06358-102">摘要</span><span class="sxs-lookup"><span data-stu-id="06358-102">Summary</span></span>
  ms.date: 09/24/2018
  author: mimig1
  ms.author: mimig
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ROBOTS: NOINDEX
  ms.openlocfilehash: d8b5a187e9c4353b2b27407c2a3264e1b032bed7
  ms.sourcegitcommit: ed6fdf0be4f20279586c4d18c9105fdb65a392eb
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 04/21/2019
  ms.locfileid: "2137531"
title: <span data-ttu-id="06358-103">摘要</span><span class="sxs-lookup"><span data-stu-id="06358-103">Summary</span></span>
durationInMinutes: 3
content: >
  [!include[](includes/7-summary.md)]
quiz:
  title: <span data-ttu-id="06358-104">查看你的知识</span><span class="sxs-lookup"><span data-stu-id="06358-104">Check your knowledge</span></span>
  questions:
  - content: <span data-ttu-id="06358-105">假设您要使用 Visual Studio 代码来开发访问 Azure Cosmos DB 的 .net Core 应用程序。</span><span class="sxs-lookup"><span data-stu-id="06358-105">Suppose you are using Visual Studio Code to develop a .NET Core application that accesses Azure Cosmos DB.</span></span> <span data-ttu-id="06358-106">您需要在应用程序配置中包含数据库的连接字符串。</span><span class="sxs-lookup"><span data-stu-id="06358-106">You need to include the connection string for your database in your application configuration.</span></span> <span data-ttu-id="06358-107">在您的项目中获取此信息的最简便方法是什么？</span><span class="sxs-lookup"><span data-stu-id="06358-107">What is the most convenient way to get this information into your project?</span></span>
    choices:
    - content: <span data-ttu-id="06358-108">直接从 Visual Studio Code</span><span class="sxs-lookup"><span data-stu-id="06358-108">Directly from Visual Studio Code</span></span>
      isCorrect: true
      explanation: <span data-ttu-id="06358-109">借助 azure Cosmos DB 扩展, 可以在 Visual Studio Code 中管理和创建 Azure Cosmos DB 帐户和数据库。</span><span class="sxs-lookup"><span data-stu-id="06358-109">The Azure Cosmos DB extension lets you administer and create Azure Cosmos DB accounts and databases from within Visual Studio Code.</span></span>
    - content: <span data-ttu-id="06358-110">从 Azure 门户</span><span class="sxs-lookup"><span data-stu-id="06358-110">From the Azure portal</span></span>
      isCorrect: false
      explanation: <span data-ttu-id="06358-111">Azure 门户不提供此信息, 但如果您已经在 Visual Studio Code 中, 转到门户并不可能是最方便的选择。</span><span class="sxs-lookup"><span data-stu-id="06358-111">The Azure portal does provide this information, but if you're already in Visual Studio Code, going to the portal is unlikely to be the most convenient choice.</span></span>
    - content: <span data-ttu-id="06358-112">使用 Azure CLI</span><span class="sxs-lookup"><span data-stu-id="06358-112">Using the Azure CLI</span></span>
      isCorrect: false
      explanation: <span data-ttu-id="06358-113">虽然这是一个很好的选择, 但由于 Visual Studio Code 具有内置的终端, 因此它需要了解必需的命令。</span><span class="sxs-lookup"><span data-stu-id="06358-113">While this is a good choice, especially since Visual Studio Code has a built-in terminal, it does require knowledge of the required commands.</span></span> <span data-ttu-id="06358-114">这可能不像 Visual Studio Code extension 那样方便。</span><span class="sxs-lookup"><span data-stu-id="06358-114">This may not be as convenient as the Visual Studio Code extension.</span></span>
  - content: <span data-ttu-id="06358-115">使用 Azure Cosmos DB 的 SQL API 时, 哪些可用于执行 CRUD 操作？</span><span class="sxs-lookup"><span data-stu-id="06358-115">When working with Azure Cosmos DB's SQL API, which of these can be used to perform CRUD operations?</span></span>
    choices:
    - content: <span data-ttu-id="06358-116">一些</span><span class="sxs-lookup"><span data-stu-id="06358-116">LINQ</span></span>
      isCorrect: true
      explanation: <span data-ttu-id="06358-117">LINQ 和 SQL 是用于查询 SQL API 的两种有效方法。</span><span class="sxs-lookup"><span data-stu-id="06358-117">LINQ and SQL are two of the valid methods for querying the SQL API.</span></span>
    - content: <span data-ttu-id="06358-118">Apache Cassandra 客户端库</span><span class="sxs-lookup"><span data-stu-id="06358-118">Apache Cassandra client libraries</span></span>
      isCorrect: false
      explanation: <span data-ttu-id="06358-119">Apache Cassandra 库可用于 Azure Cosmos DB 的 Cassandra API, 但不能与 SQL api 配合使用。</span><span class="sxs-lookup"><span data-stu-id="06358-119">Apache Cassandra libraries can work with Azure Cosmos DB’s Cassandra API but not with the SQL API.</span></span>
    - content: <span data-ttu-id="06358-120">Azure 表存储库</span><span class="sxs-lookup"><span data-stu-id="06358-120">Azure Table Storage libraries</span></span>
      isCorrect: false
      explanation: <span data-ttu-id="06358-121">azure 表存储库可以使用 azure Cosmos DB 的 Table API, 但不能与 SQL API 配合使用。</span><span class="sxs-lookup"><span data-stu-id="06358-121">Azure Table Storage libraries can work with Azure Cosmos DB's Table API but not with the SQL API.</span></span>
  - content: <span data-ttu-id="06358-122">在使用 Azure Cosmos DB Client SDK 的 DocumentClient 类时, 使用了 NOSQL 模型。</span><span class="sxs-lookup"><span data-stu-id="06358-122">When working with the Azure Cosmos DB Client SDK's DocumentClient class, you use a NOSQL model.</span></span> <span data-ttu-id="06358-123">如何使用此类将 Person 文档的 FirstName 字段从 ' 王小姐 ' 更改为 ' Fran '？</span><span class="sxs-lookup"><span data-stu-id="06358-123">How would you use this class to change the FirstName field of a Person Document from 'Ann' to 'Fran'?</span></span>
    choices:
    - content: <span data-ttu-id="06358-124">使用 FirstName 调用 UpdateDocumentAsync = Fran</span><span class="sxs-lookup"><span data-stu-id="06358-124">Call UpdateDocumentAsync with FirstName=Fran</span></span>
      isCorrect: false
      explanation: <span data-ttu-id="06358-125">DocumentClient 类不具有 UpdateDocumentAsync 方法。</span><span class="sxs-lookup"><span data-stu-id="06358-125">The DocumentClient class doesn't have an UpdateDocumentAsync method.</span></span> <span data-ttu-id="06358-126">更新单个字段与文档样式的 NOSQL 方法不一致。</span><span class="sxs-lookup"><span data-stu-id="06358-126">Updating a single field is not consistent with the document-style NOSQL approach.</span></span>
    - content: <span data-ttu-id="06358-127">使用更新的 Person 对象调用 UpsertDocumentAsync</span><span class="sxs-lookup"><span data-stu-id="06358-127">Call UpsertDocumentAsync with an updated Person object</span></span>
      isCorrect: false
      explanation: <span data-ttu-id="06358-128">虽然这是可行的, 但并不是满足我们要求的最低访问权限。</span><span class="sxs-lookup"><span data-stu-id="06358-128">While this would work, it isn't the minimum necessary access to meet our requirements.</span></span> <span data-ttu-id="06358-129">如果文档的键已存在, 则 Upsert 操作将替换该文档, 或添加新文档 (如果没有)。</span><span class="sxs-lookup"><span data-stu-id="06358-129">Upsert operations will replace a document if its key already exists or add a new document if not.</span></span> <span data-ttu-id="06358-130">我们不想添加一个新的, 因此, 使用此方法会带来细微的困难, 难以跟踪 bug。</span><span class="sxs-lookup"><span data-stu-id="06358-130">We don't want to add a new one, so using this method risks introducing subtle, hard to track bugs.</span></span>
    - content: <span data-ttu-id="06358-131">使用更新的 Person 对象调用 ReplaceDocumentAsync</span><span class="sxs-lookup"><span data-stu-id="06358-131">Call ReplaceDocumentAsync with an updated Person object</span></span>
      isCorrect: true
      explanation: <span data-ttu-id="06358-132">ReplaceDocumentAsync 将使用新文档替换现有文档。</span><span class="sxs-lookup"><span data-stu-id="06358-132">ReplaceDocumentAsync will replace the existing document with the new one.</span></span> <span data-ttu-id="06358-133">在这种情况下, 我们打算将旧的和新的作为 FirstName 而不是名字。</span><span class="sxs-lookup"><span data-stu-id="06358-133">In this case we'd intend the old and new to be the same other than FirstName.</span></span>
